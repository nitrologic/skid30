https://forums.codeguru.com/showthread.php?343829-break-blocked-getchar-call

int unblock = 0;		// (write-end of the pipe)
int block_check = 0;	// (read-end of the pipe)

bool inputReadyWait()
{
	if (!unblock)
	{
		// no block/unblock pipe yet....
		int unblock_pipe[2];
		if (pipe(unblock_pipe))
			return false;
		unblock = unblock_pipe[1];		// unblock key
		block_check = unblock_pipe[0];	// block check
	}

	// find out if (input_is_ready_on_stdin || unblock_key_has_been_activated)
	fd_set read_set;
	FD_ZERO(&read_set);
	FD_SET(0,&read_set);
	FD_SET(block_check,&read_set);	// if there's anything to read on the pipe unblock_key has been activated!

	// wait until input is ready or a cancel wait was issued
	if (select(block_check+1,&read_set,NULL,NULL,NULL) == -1)
		return false;

	if (FD_ISSET(0,&read_set))
		return true;			// input ready on stdin
	else
	{
		if (block_check)		// user issued cancel wait!
			close(block_check);
		block_check = 0;
		return false;
	}

}

void cancelInputWait()
{
	if (unblock)
	{
		write(unblock,'\0',1);	// stub!
		close(unblock);
		unblock = 0;
	}
}



DOS_IOERR=-132,

enum DosErrors{
/* Errors from IoErr(), etc. */
	ERROR_NO_FREE_STORE=103,
	ERROR_TASK_TABLE_FULL=105,
	ERROR_BAD_TEMPLATE=114,
	ERROR_BAD_NUMBER=115,
	ERROR_REQUIRED_ARG_MISSIN=116,
	ERROR_KEY_NEEDS_ARG=117,
	ERROR_TOO_MANY_ARGS=118,
	ERROR_UNMATCHED_QUOTES=119,
	ERROR_LINE_TOO_LONG=120,
	ERROR_FILE_NOT_OBJECT=121,
	ERROR_INVALID_RESIDENT_LIBRAR=122,
	ERROR_NO_DEFAULT_DIR=201,
	ERROR_OBJECT_IN_USE=202,
	ERROR_OBJECT_EXISTS=203,
	ERROR_DIR_NOT_FOUND=204,
	ERROR_OBJECT_NOT_FOUND=205,
	ERROR_BAD_STREAM_NAME=206,
	ERROR_OBJECT_TOO_LARGE=207,
	ERROR_ACTION_NOT_KNOWN=209,
	ERROR_INVALID_COMPONENT_NAM=210,
	ERROR_INVALID_LOCK=211,
	ERROR_OBJECT_WRONG_TYPE=212,
	ERROR_DISK_NOT_VALIDATE=213,
	ERROR_DISK_WRITE_PROTECTE=214,
	ERROR_RENAME_ACROSS_DEVICE=215,
	ERROR_DIRECTORY_NOT_EMPT=216,
	ERROR_TOO_MANY_LEVELS=217,
	ERROR_DEVICE_NOT_MOUNTE=218,
	ERROR_SEEK_ERROR=219,
	ERROR_COMMENT_TOO_BIG=220,
	ERROR_DISK_FULL=221,
	ERROR_DELETE_PROTECTED=222,
	ERROR_WRITE_PROTECTED=223,
	ERROR_READ_PROTECTED=224,
	ERROR_NOT_A_DOS_DISK=225,
	ERROR_NO_DISK=226,
	ERROR_NO_MORE_ENTRIES=232,
/* added for 1.4 */
	ERROR_IS_SOFT_LINK=233,
	ERROR_OBJECT_LINKED=234,
	ERROR_BAD_HUNK=235,
	ERROR_NOT_IMPLEMENTED=236,
	ERROR_RECORD_NOT_LOCKED=240,
	ERROR_LOCK_COLLISION=241,
	ERROR_LOCK_TIMEOUT=242,
	ERROR_UNLOCK_ERROR=243
};

# add_subdirectory(raylib)

ADD_EXECUTABLE(raydisplay loadiff.h monitor.h filedecoder.h machine.cpp raydisplay.cpp)
target_link_libraries(raydisplay raylib)
target_link_libraries(raydisplay )

RAYLIB 4.6
Copyright (c) 2013-2023 Ramon Santamaria (@raysan5)

GLFW
Copyright (c) 2002-2006 Marcus Geelnard
Copyright (c) 2006-2019 Camilla LÃ¶wy




//		key=run?0:tty_getch();
//		key=tty_getch();
//		key=getch();

		key=getch3();
